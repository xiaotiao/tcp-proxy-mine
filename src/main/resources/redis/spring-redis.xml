<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <!-- 引入项目配置文件 -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:redis.properties</value>
			</list>
		</property>
	</bean>
	
	<!--配置jedis -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="testOnReturn" value="${redis_test_on_return}" />
		<property name="maxIdle" value="${redis_max_idle}" />
		<property name="maxTotal" value="${redis_max_total}" />
		<property name="maxWaitMillis" value="${redis_max_wait_millis}" />
		<property name="minIdle" value="${redis_min_idle}" />
		<property name="lifo" value="${redis_lifo}" />
		<property name="softMinEvictableIdleTimeMillis" value="${redis_soft_min_evictable_idle_time_millis}" />
		<property name="testOnBorrow" value="${redis_test_on_borrow}" />
		<property name="testWhileIdle" value="${redis_test_while_idle}" />
		<property name="timeBetweenEvictionRunsMillis" value="${redis_time_between_eviction_runs_millis}" />
		<property name="blockWhenExhausted" value="${redis_block_when_exhausted}" />
	</bean>

	<bean id="jedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
		destroy-method="destroy">
		<property name="hostName" value="${redis_host}" />
		<property name="port" value="${redis_port}" />
		<property name="timeout" value="15000" />
		<property name="database" value="0" />
		<property name="password" value="${redis_password}" />
		<property name="usePool" value="true" />
		<property name="poolConfig" ref="jedisPoolConfig" />
	</bean>

	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"
		p:connection-factory-ref="jedisConnectionFactory">
		<!-- 序列化方式 建议key/hashKey采用StringRedisSerializer。 -->
		<property name="keySerializer">
			<bean
				class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="hashKeySerializer">
			<bean
				class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="valueSerializer">
			<bean
				class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
		</property>
		<property name="hashValueSerializer">
			<bean
				class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
		</property>

	</bean>

    <!-- 对string操作的封装 -->
    <bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate"  
        p:connection-factory-ref="jedisConnectionFactory" /> 
</beans>